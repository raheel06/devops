apiVersion: v1
kind: ConfigMap
metadata:
  name: party-server-config
  namespace: devops
  labels:
    app: featurehub
    component: party-server
  
data:
  POSTGRES_PASSWORD: mypassword
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: featurehub-ps-db-pvc
  namespace: devops
  labels:
    app: featurehub
    component: db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-share
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: featurehub-app-config-pvc
  namespace: devops
  labels:
    app: featurehub
    component: party-server
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-share
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: featurehub-db
  namespace: devops
  labels:
    app: featurehub
    component: db
spec:
  serviceName: featurehub-db
  replicas: 1
  selector:
    matchLabels:
      app: featurehub
      component: db
  template:
    metadata:
      labels:
        app: featurehub
        component: db
    spec:
      priorityClassName: high-priority
      nodeSelector:
        node-role: devops
      containers:
        - name: db
          image: postgres:14-alpine
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: party-server-config
                  key: POSTGRES_PASSWORD
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: db-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: db-storage
          persistentVolumeClaim:
            claimName: featurehub-ps-db-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: featurehub-db
  namespace: devops
  labels:
    app: featurehub
    component: db
spec:
  ports:
    - name: db
      port: 5432
      targetPort: 5432
  selector:
    app: featurehub
    component: db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: featurehub-party-server
  namespace: devops
  labels:
    app: featurehub
    component: party-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: featurehub
      component: party-server
  template:
    metadata:
      labels:
        app: featurehub
        component: party-server
    spec:
      priorityClassName: high-priority
      nodeSelector:
        node-role: devops      
      containers:
        - name: party-server
          image: featurehub/party-server:latest
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          ports:
            - name: http
              containerPort: 8085
            - name: admin
              containerPort: 8701
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "250m"
              memory: "256Mi"
          volumeMounts:
            - name: app-config
              mountPath: /etc/app-config
      volumes:
        - name: app-config
          persistentVolumeClaim:
            claimName: featurehub-app-config-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: featurehub-party-server
  namespace: devops
  labels:
    app: featurehub
    component: party-server
spec:
  type: NodePort
  ports:
    - name: http
      port: 8085
      targetPort: 8085
      nodePort: 30085
    - name: admin
      port: 8701
      targetPort: 8701
  selector:
    app: featurehub
    component: party-server
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: featurehub-ingress
  namespace: devops
  labels:
    app: featurehub
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: devops-featurehub.domain.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: featurehub-party-server
                port:
                  number: 8085
