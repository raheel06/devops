apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-storage-pvc
  namespace: devops
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi 
  storageClassName: nfs-share
---

apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: devops
  labels:
    app: grafana
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app: grafana

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      priorityClassName: low-priority
      nodeSelector:
        node-role: devops
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
            - name: GF_SMTP_ENABLED
              value: "true"
            - name: GF_SMTP_HOST
              value: "100.120.1.1:25"
            - name: GF_SMTP_USER
              value: "devops@domain.com"
            - name: GF_SMTP_PASSWORD
              value: "devops@domain.com"
            - name: GF_SMTP_SKIP_VERIFY
              value: "true"
            - name: GF_SMTP_FROM_ADDRESS
              value: "devops@domain.com"
            - name: GF_SMTP_FROM_NAME
              value: "Grafana Alerts"
            - name: GF_SMTP_STARTTLS_POLICY
              value: "MandatoryStartTLS"
            - name: GF_SERVER_ROOT_URL
              value: "https://devops-grafana.domain.com/"

          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
      volumes:
        - name: grafana-config
          configMap:
            name: grafana-config
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-storage-pvc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: devops
spec:
  ingressClassName: nginx
  rules:
    - host: devops-grafana.domain.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
